{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst useWeather = () => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWeatherAndCity = async () => {\n      try {\n        const locationResponse = await axios.get(\"https://ipinfo.io/json\");\n        const city = locationResponse.data.city;\n        const [latitude, longitude] = locationResponse.data.loc.split(\",\").map(Number);\n        const WEATHER_API_KEY = \"af0c5d45e93f3eaf790e566131302bea\"; // Replace with your OpenWeatherMap API key\n        const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=${WEATHER_API_KEY}`);\n        const iconCode = weatherResponse.data.weather[0].icon;\n        const iconUrl = `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n        const {\n          temp\n        } = weatherResponse.data.main;\n        setWeather({\n          temperature: temp,\n          iconUrl,\n          city\n        });\n      } catch (err) {\n        console.log(\"fetch error \", err);\n        setError(\"Failed to fetch weather or location data.\");\n      }\n    };\n    fetchWeatherAndCity();\n  }, []);\n  return {\n    weather,\n    error\n  };\n};\n_s(useWeather, \"dducRVO0pCJQnxjTimDps8bxXd8=\");\nexport default useWeather;","map":{"version":3,"names":["useEffect","useState","axios","useWeather","_s","weather","setWeather","error","setError","fetchWeatherAndCity","locationResponse","get","city","data","latitude","longitude","loc","split","map","Number","WEATHER_API_KEY","weatherResponse","iconCode","icon","iconUrl","temp","main","temperature","err","console","log"],"sources":["/home/oussama/Desktop/GitPortfolio/Main/src/hooks/useWeather.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useWeather = () => {\n\tconst [weather, setWeather] = useState(null);\n\tconst [error, setError] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst fetchWeatherAndCity = async () => {\n\t\t\ttry {\n\t\t\t\tconst locationResponse = await axios.get(\"https://ipinfo.io/json\");\n\t\t\t\tconst city = locationResponse.data.city;\n\t\t\t\tconst [latitude, longitude] = locationResponse.data.loc\n\t\t\t\t\t.split(\",\")\n\t\t\t\t\t.map(Number);\n\n\t\t\t\tconst WEATHER_API_KEY = \"af0c5d45e93f3eaf790e566131302bea\"; // Replace with your OpenWeatherMap API key\n\t\t\t\tconst weatherResponse = await axios.get(\n\t\t\t\t\t`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=${WEATHER_API_KEY}`\n\t\t\t\t);\n\n\t\t\t\tconst iconCode = weatherResponse.data.weather[0].icon;\n\t\t\t\tconst iconUrl = `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n\t\t\t\tconst { temp } = weatherResponse.data.main;\n\n\t\t\t\tsetWeather({ temperature: temp, iconUrl, city });\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(\"fetch error \", err);\n\t\t\t\tsetError(\"Failed to fetch weather or location data.\");\n\t\t\t}\n\t\t};\n\n\t\tfetchWeatherAndCity();\n\t}, []);\n\n\treturn { weather, error };\n};\n\nexport default useWeather;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACf,MAAMS,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACH,MAAMC,gBAAgB,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,wBAAwB,CAAC;QAClE,MAAMC,IAAI,GAAGF,gBAAgB,CAACG,IAAI,CAACD,IAAI;QACvC,MAAM,CAACE,QAAQ,EAAEC,SAAS,CAAC,GAAGL,gBAAgB,CAACG,IAAI,CAACG,GAAG,CACrDC,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAACC,MAAM,CAAC;QAEb,MAAMC,eAAe,GAAG,kCAAkC,CAAC,CAAC;QAC5D,MAAMC,eAAe,GAAG,MAAMnB,KAAK,CAACS,GAAG,CACtC,uDAAuDG,QAAQ,QAAQC,SAAS,uBAAuBK,eAAe,EACvH,CAAC;QAED,MAAME,QAAQ,GAAGD,eAAe,CAACR,IAAI,CAACR,OAAO,CAAC,CAAC,CAAC,CAACkB,IAAI;QACrD,MAAMC,OAAO,GAAG,qCAAqCF,QAAQ,SAAS;QACtE,MAAM;UAAEG;QAAK,CAAC,GAAGJ,eAAe,CAACR,IAAI,CAACa,IAAI;QAE1CpB,UAAU,CAAC;UAAEqB,WAAW,EAAEF,IAAI;UAAED,OAAO;UAAEZ;QAAK,CAAC,CAAC;MACjD,CAAC,CAAC,OAAOgB,GAAG,EAAE;QACbC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,GAAG,CAAC;QAChCpB,QAAQ,CAAC,2CAA2C,CAAC;MACtD;IACD,CAAC;IAEDC,mBAAmB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEJ,OAAO;IAAEE;EAAM,CAAC;AAC1B,CAAC;AAACH,EAAA,CAjCID,UAAU;AAmChB,eAAeA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}